<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">



    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml"/>
        <property name="persistenceUnitName" value="Main"/>
        <property name="jpaVendorAdapter" ref="vendorAdapter"/>
    </bean>

    <bean id="vendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="jackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="200000"/>
    </bean>



    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="ua.stryi.michailo.**"/>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <ref bean="jackson2HttpMessageConverter"/>
            <ref bean="stringHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
<mvc:resources mapping="/resources/**" location="/resources/"/>
    <jpa:repositories base-package="ua.stryi.michailo.repo"/>

    <security:http>
        <security:form-login login-page="/" login-processing-url="/sign-in-processing" />
        <security:logout/>
        <security:csrf disabled="true"/>


        <security:intercept-url pattern="/article/delete/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/add/article/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/picture/comment/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/picture/add/comment/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/user/event/add/comment/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/picture//delete/comment/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/article/add/comment/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/article/comment/delete/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/event/add" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/{id}/add/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/followers" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/followers/delete/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/add/friend/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/id/friends" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/friends" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/friend/delete/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/add/like/comment/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/like/userevent/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/article/like/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/photo/like/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/photo/list/likes/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/message/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/get/message/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/message/send/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/messages" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/messages/list" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/participate/userevent/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/participate/userevent/list/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/perhaps/participate/userevent/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/perhaps/participate/userevent/list/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/add/picture" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/add/avatar" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/picture/{id}/avatar" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/picture/{id}/delete" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/{id}/pictures" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/pictures" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/picture/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/all" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/profile" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:intercept-url pattern="/account/edit/{id}" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>




        <security:anonymous username="anonymous" granted-authority="ROLE_ANONYMOUS" />
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
          <security:user-service>
              <security:user name="admin" password="admin" authorities="ROLE_ADMIN"/>

          </security:user-service>

        </security:authentication-provider>

        <security:authentication-provider user-service-ref="userServiceIml">

        </security:authentication-provider>
    </security:authentication-manager>

</beans>